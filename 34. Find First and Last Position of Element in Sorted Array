class Solution {
    public int[] searchRange(int[] nums, int target) {
            int a[] = {-1, -1};
            if (nums.length == 0) {
                return a;
            }
            int l = 0, r = nums.length - 1;
            a[0] = first(nums,target,l,r);
            a[1] = last(nums,target,l,r);
            return a;
        }
        public static int first(int[] nums, int target, int l, int r) {
            int pos = -1;
            while (l<=r) {
                int mid = l + (r-l)/2;
                if (nums[mid] >= target) {
                    r = mid-1;
                }
                else  {
                    l = mid+1;
                }
                if (nums[mid] == target) {
                    pos = mid;
                }
            }
            return pos;
        }
    public static int last(int[] nums, int target,int l,int r) {
        int pos = -1;
        while (l<=r) {
            int mid = l + (r-l)/2;
            if (nums[mid] <= target) {
                l = mid+1;
            }
            else  {
                r = mid-1;
            }
            if (nums[mid] == target) {
                pos = mid;
            }
        }
        return pos;

    }

}
